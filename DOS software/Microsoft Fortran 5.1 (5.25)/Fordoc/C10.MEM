







                               ГЛАВА 10

           ИСПОЛЬЗОВАНИЕ ШРИФТОВ ИЗ ГРАФИЧЕСКОЙ БИБЛИОТЕКИ

     Графическая библиотека MSФортрана  включает  процедуры  DOS,
которые   печатают   текст  различных  размеров  и  стилей.   Эти
процедуры обеспечивают значительно больший контроль  над  выводом
текста,  нежели оператор WRITE:  они делают более привлекательным
ваш вывод на экран.

     Шрифт (font)  это  набор  стилизованных  текстовых  символов
определенного  размера.  Предполагается, что вы прочли предыдущую
главу и поняли основную терминологию,  которая  вводится  в  этой
главе.   Кроме  того,  вы  должны быть хорошо знакомы с основными
свойствами процедур setvideomode и moveto.

     В  первом  разделе  этой  главы  делается   обзор   шрифтов,
поставляемых  в  графической  библиотеке  MSФортрана,  и вводятся
соответствующие термины.  В следующих двух  разделах  описывается
процесс   регистрации,   установки   и  использования  шрифтов  в
графической  среде.   В   последней   главе   описаны   проблемы,
воникающие  при  использовании  шрифтов,  и  предложены методы их
решения.


     10.1 ДОСТУПНЫЕ ШРИФТЫ

     Графическая библиотека MSФортрана  включает  шесть  шрифтов.
Начертание  шрифта  относится  к стилю (виду) выводимого текста -
например, Courier или  Times  Roman.   Ниже  перечислены  шрифты,
доступные в MSФортране.

     Размер  шрифта  (type  size)  определяет   область   экрана,
занимаемую   отдельными   символами.    Этот   термин  пришел  из
лексикона, касающегося принтеров, но в качестве единицы измерения
используются   пикселы   экрана,   а   не  традиционные "пункты".
Например, "Courier 12x9"  обозначает  шрифт  Courier,  в  котором
каждый  символ занимает область экрана в 12 вертикальных пикселов
на 9  горизонтальных  пикселов.   Таким  образом,  слово  "шрифт"
(font) подразумевает начертание шрифта (typeface) и размер шрифта
(type size).

     Шрифтовые  процедуры  MSФортрана   используют   два   метода
создания шрифтов.  Первый метод генерирует шрифты Courier, Helv и
Tms  Rmn  с  помощью  "битового  отображения"  (или   "растрового


                               305



отображения").    Битовое  отображение  описывает  каждый  символ
битовой матрицей.  Каждый бит  в  матрице  соответствует  пикселу
экрана.    Если   бит   равен   1,   то   соответствующий  пиксел
засвечивается текущим цветом экрана.   Нулевые  битовые  значения
появляются  в  текущем цвете фона.  Видеоадаптеры используют этот
же метод для вывода текста в графическом режиме.

     Оставшиеся три стиля написания - Modern, Script  и  Roman  -
используют  для  создания  шрифтов  метод векторного отображения.
Векторное отображение представляет каждый символ в виде  линий  и
дуг.   В  буквальном  смысле  компьютер  рисует  на экране каждый
векторно-отображаемый символ.  В противоположность этому, битовое
отображение  как  бы  рисует по трафарету или наносит изображение
каждого символа на экран.

     Каждый метод имеет преимущества  и  недостатки.   Символы  с
битовым    отображением    получаются    более   гладкими   из-за
предопределенного пиксельного отображения.  Однако, они не  могут
быть   масштабированы.   Текст  с  векторным  отображением  можно
масштабировать к любому размеру, но  символы  имеют  тенденцию  к
недостаткам   жесткого   внешнего   вида   символов   с   битовым
отображением.

     В таблице 10.1 перечислены  доступные  размеры  для  каждого
шрифта.   Обратите  внимание,  что  шрифты с битовым отображением
имеют жестко установленный размер, измеряемый в пикселах.  Точный
размер  любого символа шрифта зависит от разрешения экрана и типа
дисплея.

Таблица 10.1  Шрифты и их размеры в графической
              библиотеке Фортрана
-----------------------------------------------------------------
Шрифт       Отображение    Размер (в пикселах)   Интервал
-----------------------------------------------------------------
Courier     Битовое        10x8,12x9,15x12       фиксированный

Helv        Битовое        10x5,12x7,15x8        пропорциональный
                           18x9,22x12,28x16

Tms Rmn     Битовое        10x5,12x6,15x8        пропорциональный
                           16x9,20x12,26x16

Modern      Векторное      масштабируется        пропорциональный

Script      Векторное      масштабируется        пропорциональный

Roman       Векторное      масштабируется        пропорциональный
-----------------------------------------------------------------




                               306



     10.2 ИСПОЛЬЗОВАНИЕ ШРИФТОВ MSФОРТРАНА

     Дисковые файлы с расширением .FON содержат  данные  как  для
шрифтов  с  битовым  отображением,  так и для шрифтов с векторным
отображением.  Имена файлов обозначают их содержимое.   Например,
файлы MODERN.FON, SCRIPT.FON и ROMAN.FON содержат данные для трех
шрифтов с векторным отображением.

     Фортрановские файлы  с  расширением  .FON  идентичны  файлам
.FNT,  используемым в операционной среде Microsoft Windows.  Если
вы выполняете Wиndows, то можете  использовать  любой  из  файлов
.FNT   с   шрифтовыми   функциями  Фортрана.   (Вы  можете  также
приобрести файлы .FNT Windows отдельно).  Кроме того,  существует
программное  обеспечение,  которое создает или модифицирует файлы
.FNT, позволяя создавать свои собственные шрифты.

     Для того, чтобы использовать шрифты в вашей  программе,  вам
необходимо:

     1.  Зарегистрировать шрифт.

     2.  Установить текущий шрифт по регистрации.

     3.  Вывести текст, используя текущий шрифт.

     В следующих разделах  подробно  описаны  все  эти  шаги.   В
разделе 10.3 дан пример программы использования шрифтов.


     10.2.1 РЕГИСТРАЦИЯ ШРИФТОВ

     Шрифт, который вы хотите использовать, необходимо  в  первую
очередь  организовать  в  виде  списка  в  памяти, - этот процесс
называется   "регистрацией".    Этот   список   дает   компьютеру
информацию   о   доступных   файлах  .FON.   Регистрация  шрифтов
выполняется вызовом процедуры registerfonts.  Процедура считывает
головную  информацию  из  указанных  файлов  .FON и строит список
файловой информации, но сами данные из файлов не считывает.

     Процедура registerfonts описана в файле FGRAPH.FI  следующим
образом:

      INTERFACE TO FUNCTION registerfonts(filename)
      INTEGER*2 registerfonts[FAR,C,ALIAS:"__f_registerfonts"]
      CHARACTER*(*) filename[FAR,REFERENCE]
      END

     Аргумент определяет  имя  нужного  файла  .FON.   Имя  может
включать  метасимволы,  которые  дают  возможность регистрировать
сразу несколько шрифтов одним вызовом процедуры registerfonts.


                               307



     Если компьютер успешно  прочел  один  или  несколько  файлов
.FON,   то   registerfonts  возвращает  число  зарегистрированных
шрифтов.  Если функция отработала  неудачно,  то  она  возвращает
отрицательный код ошибки.


     10.2.2 УСТАНОВКА ШРИФТА И ВЫВОД ТЕКСТА

     Перед выводом текста на экран вы  должны  определить,  какой
шрифт  хотите  использовать.   После  регистрации необходимых для
работы шрифтов процедура setfont  делает  один  из  этих  шрифтов
текущим  (или  активным).   Она  считывает  данные отображения из
соответствующего файла .FON в память.

     Процедура  setfont   описана   в   include-файле   FGRAPH.FI
следующим образом:

      INTERFACE TO FUNCTION setfont(options)
      INTEGER*2 setfont[FAR,C,ALIAS:"__f_setfont"]
      CHARACTER*(*) options[FAR,REFERENCE]
      END

     Аргумент содержит буквенные коды, которые  описывают  нужный
шрифт.

Опция         Смысл
-----         -----
t'fontname'   Начертание шрифта в одинарных кавычках. fontname
              может принимать следующие значения:

              courier       modern
              helv          script
              tms rmn       roman

              Обратите внимание на пробел в имени "tms rmn".
              Дополнительные файлы со шрифтами используют
              другие имена для fontname.

hy            Высота символа, где y равен высоте в пикселах.

wx            Ширина символа, где x равен ширине в пикселах.

f             Выборка шрифта только с фиксированным интервалом.

p             Выборка шрифта только с пропорциональным интервалом.

v             Выборка шрифта только с векторным отображением.

r             Выборка шрифта только с битовым (растровым)
              отображением.


                               308



Опция         Смысл
-----         -----
b             Выборка наилучшего соответствия из
              зарегистрированных шрифтов. Опция b предписывает
              setfont выбрать наиболее соответствующий шрифт,
              если шрифт заданного размера не зарегистрирован.

              Если зарегистрирован, по крайней мере, один шрифт,
              то опция b всегда устанавливает текущий шрифт.
              Если опция b не задана и точно соответствующий
              шрифт не зарегистрирован, то setfont отработает
              неудачно. В этом случае любой существующий
              текущий шрифт остается текущим.

              Наилучшее соответствие основано на четырех
              критериях:  высота в пикселах, начертание, ширина
              в пикселах и интервал (фиксированный или
              пропорциональный). Если вы заказали шрифт с
              векторным отображением, то setfont выбирает
              шрифт, соответствующий заданным высоте и ширине
              в пикселах;  для шрифта с битовым отображением
              setfont выбирает ближайший доступный размер.
              Если требуемый размер шрифта попадает точно
              между двумя зарегистрированными шрифтами, то
              выбирается шрифт с меньшим размером.

nx            Выбирает шрифт с номером x, где x меньше или равно
              значению, возвращенному registerfonts. Например,
              опция n3 делает текущим третий зарегистрированный
              шрифт (при условии, что зарегистрировано три или
              более шрифтов).

     Вы  можете  перечислять  коды  опций  в  любом   порядке   и
заглавными  или  прописными  буквами.   Опции  могут  разделяться
пробелами.

     Процедура setfont  изменяет  область  данных  соответственно
конкретному  текущему шрифту.  Область данных хранит информацию в
структуре,  определенной  в  include-файле  FGRAPH.FI   следующим
образом:

      STRUCTURE/fontinfo/
        INTEGER*2 type        ! b0 set = vector,clear = bit map
        INTEGER*2 ascent      ! pix dist from top to baseline
        INTEGER*2 pixwidth    ! character width in pixels, 0=prop
        INTEGER*2 pixheight   ! character height in pixels
        INTEGER*2 avgwidth    ! average character width in pixels
        CHARACTER*81 filename ! file name including path
        CHARACTER*32 facename ! font name
      END STRUCTURE


                               309



     Если вы хотите получить параметры текущего шрифта,  вызовите
процедуру  getfontinfo.   После  регистрации нужных вам шрифтов и
установки одного активного шрифта выполните  следующие  два  шага
для вывода текста на экран:

     1.  Выберите исходную позицию для текста с помощью процедуры
         moveto.

     2.  Выведите текст на экран в заданной  позиции  (с  текущим
         шрифтом) с помощью процедуры outgtext.

     Процедура moveto принимает в качестве аргументов  пиксельные
координаты.   Это  координаты верхнего левого угла ячейки первого
символа в строке.  В  следующем  разделе  дан  пример  программы,
которая  выводит  на  экран  тексты  из поставляемых в MSФортране
шрифтов.


     10.3 ПРИМЕР ПРОГРАММЫ (SAMPLER)

     SAMPLER  выводит  текст,  используя  доступные   шрифты,   и
возвращает  управление  в  DOS,  когда  вы нажимаете клавишу.  Но
сначала убедитесь, что файлы .FNT находятся в текущем каталоге.

CC  SAMPLER.FOR - выводит на экран текст, используя
CC                различные шрифты

      INCLUDE  'FGRAPH.FI'
      INCLUDE  'FGRAPH.FD'

      INTEGER*2            NFONTS
      INTEGER*2            dummy, i, iend
      CHARACTER*30         list
      CHARACTER*64         fontpath
      RECORD /videoconfig/ vc
      RECORD /xycoord/     xy

      PARAMETER ( NFONTS   = 6 )

      CHARACTER*( 7 )  text(2 * NFONTS) /
     +                 "COURIER",      "courier",
     +                 "HELV"   ,      "helv"   ,
     +                 "TMS RMN",      "tms rmn",
     +                 "MODERN" ,      "modern" ,
     +                 "SCRIPT" ,      "script" ,
     +                 "ROMAN"  ,      "roman"  /

      CHARACTER*( 10 ) option(NFONTS) /
     +                 "t'courier'",   "t'helv'"  ,
     +                 "t'tms rmn'",   "t'modern'",


                               310



     +                 "t'script'" ,   "t'roman'" /

C
C     Находит файлы .FNT, затем регистрирует шрифты, считывая
C     головную информацию из всех файлов.
C
      IF( registerfonts( '*.FON' ). LT. 0 ) THEN
         WRITE (*, '(A/)') ' Enter directory for .FON files:'
         READ  (*, '(A )') fontpath
         iend = INDEX( fontpath, ' ' )
         fontpath(iend:iend + 5) = '\*.FON'
         IF( registerfonts( fontpath ). LT. 0 )
     +       STOP 'Error:  cannot find font files'
      ENDIF

C
C     Устанавливает графический режим.
C
      IF( setvideomode( $MAXRESMODE ) .EQ. 0 )
     +   STOP 'Error:  cannot set graphics mode'

C
C     Копирует видеоконфигурацию в структуру vc.
C
      CALL getvideoconfig( vc )

C
C     Выводит шесть строк текста.
C
      DO i = 1, NFONTS
         list = option(i) // 'h30w24b'
         IF( setfont( list ) .EQ. 0 ) THEN
            dummy = setcolor( INT4( i ) )
            CALL moveto( 0, (i - 1) * vc.numypixels / NFONTS, xy )
            CALL outgtext( text((i * 2) - 1) )
            CALL moveto( vc.numxpixels/2,
     +                   (i - 1) * vc.numypixels / NFONTS, xy )
            CALL outgtext( text(i * 2) )
         ELSE
            dummy = setvideomode( $DEFAULTMODE )
            STOP 'Error:  cannot set font'
         END IF
      END DO

      READ (*,*)
      dummy = setvideomode( $DEFAULTMODE )
C
C     Возвращает память по окончании работы со шрифтами.
C
      CALL unregisterfonts()


                               311



      END

     Обратите внимание, что SAMPLER вызывает процедуру setfont  с
заданием  начертания  шрифта  и  наилучшего  соответствия  высоте
символов 30 пикселов и ширине символов 24 пиксела.   После  этого
графическая  процедура  moveto устанавливает исходную позицию для
каждой строки текста.   Если  программа  находит  шрифт,  то  она
посылает на экран сообщение.


     10.4 ЭФФЕКТИВНОЕ ИСПОЛЬЗОВАНИЕ ШРИФТОВ

     Использование шрифтов для печати текстов несложно и  требует
совсем  немного  усилий  от программиста.  При работе со шрифтами
помните о следующем:

     1.  Видеорежим должен устанавливаться только один раз.  Если
         вы  создаете  изображение  и  хотите внести в него текст
         определенного  шрифта,  то   перед   вызовом   шрифтовых
         процедур  не  вводите  заново  видеорежим.   Иначе экран
         будет снова очищен и созданное изображение пропадет.

     2.  Функция setfont считывает  файлы  .FON,  чтобы  получить
         данные   отображения   для   текущего   шрифта.   Каждое
         обращение  к  setfont  перезаписывает  в  памяти  старую
         информацию  о  шрифте.  Если вы хотите показать на одном
         экране текст  разных  стилей,  то  выводите  весь  текст
         каждого стиля до ввода другого шрифта.  Уменьшение числа
         вызовов  setfont   сокращает   временные   затраты   для
         дискового ввода-вывода и перезагрузки памяти.

     3.  После того, как программа закончила работу с библиотекой
         шрифтов,    может    понадобиться   освободить   память,
         занимаемую   регистрационным   списком.     Для    этого
         используется     подпрограмма     unregisterfonts.     В
         соответствии   со   своим   именем   эта    подпрограмма
         освобождает     память,    захваченную    registerfonts.
         Регистрационная информация  для  шрифта  любого  размера
         занимает  приблизительно 140 байт памяти, поэтому размер
         освобождаемой памяти существенен в том случае, если было
         зарегистрировано много шрифтов.

     Дополнительную информацию о синтаксисе и использовании  всех
процедур для работы со шрифтами можно найти в следующей главе.








                               312

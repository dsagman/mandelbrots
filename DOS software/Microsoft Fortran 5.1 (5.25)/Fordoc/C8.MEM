







                             ГЛАВА 8

                ГРАФИЧЕСКАЯ БИБЛИОТЕКА MSФОРТРАНА

     Графическая   библиотека   времени   выполнения   MSФортрана
включает  обширный  набор  графических функций.  Она поддерживает
операции с пиксельной графикой, с графическими  шрифтами  и,  что
немаловажно,  с  произвольными координатами.  Кроме того, имеются
соответствующие процедуры для работы  под  управлением  OS/2.   В
данной  главе  описаны  основные  категории  процедур графической
библиотеки  и  их   использование.    Графические   примитивы   и
графические  шрифты  более  подробно  описаны  в  главах  9 и 10.
Полное  описание  синтаксиса  и   использования   всех   процедур
находится в главе 11.

     В  этой  главе  делается  обзор  всех  процедур  и  вводятся
некоторые  основные понятия.  Отдельные процедуры влияют на выход
других процедур и внимательное  чтение  главы  даст  вам  хорошее
понимание того, как взимодействуют разные классы процедур.

     К  этой  графической  библиотеке  можно  обращаться  как  из
MSФортрана,   так   и   из   других   языков   фирмы   Microsoft,
поддерживающих  вызов  процедур  Фортрана.    Графический   пакет
поддерживает IBM-совместимые графические адаптеры EGA, CGA, MCGA,
некоторые рабочие режимы VGA,  а  также  видеорежим  Olivetti  на
персональных   компьютерах   AT&T.    Пакет   поддерживает  также
графические платы Hercules Graphics  Card,  Graphics  Card  Plus,
InColor Card и другие полностью совместимые платы.


     8.1  ИСПОЛЬЗОВАНИЕ ГРАФИЧЕСКИХ ФУНКЦИЙ

     Процедуры для работы с графикой и  шрифтами  поставляются  в
библиотеке  времени  выполнения  GRAPHICS.LIB, которую необходимо
подключать к программе, использующей графику.  В OS/2  библиотека
GRTEXTP.LIB  содержит  графические  процедуры  в  текстовом виде.
Графические процедуры это функции и подпрограммы, которые  рисуют
на   экране   линии,   прямоугольники,   эллипсы   и  аналогичные
графические элементы.  Процедуры  для  работы  со  шрифтами  дают
возможность  создавать текст самых разнообразных форм, размеров и
цветов.

     Процедуры графической библиотеки должны быть описаны.

     Любая программа, использующая графическую библиотеку, должна


                               254



явным  образом  описывать  все процедуры, которые она использует.
Это означает, что вам необходимо либо писать интерфейс для каждой
процедуры,  которую вы вызываете, либо использовать include-файлы
FGRAPH.FI и FGRAPH.FD.  В OS/2 библиотека GRTEXTP.LIB  использует
эти   же   файлы.    Include-файл  FGRAPH.FI  содержит  операторы
INTERFACE  с  описаниями  процедур,  а   include-файл   FGRAPH.FD
содержит  описания  структур  и символических констант и описания
операторов  EXTERNAL  для  графических  процедур.    Вместе   они
содержат  описания,  необходимые для обращения ко всем процедурам
графической библиотеки.  Для их использования необходимо включать
файл  FGRAPH.FI  в  начало  исходных  файлов  вашей  программы, а
FGRAPH.FD  -  в  каждую  подпрограмму,   вызывающую   графическую
процедуру.

     Библиотека   времени   выполнения   GRAPHICS.LIB    содержит
процедуры   для   выполнения  различных  задач,  возникающих  при
создании и манипулировании графикой:

Категория            Задача
---------            ------

Выбор режима и       Выбирает  соответствующий  аппаратный  режим
среды рисования      отображения  и устанавливает области  памяти
                     для записи и отображения образов.

Установка            Определяет  область  отображения на экране и
координат            ее начало.

Установка            Определяет цвета,  доступные для графических
графической          процедур.
палитры

Установка            Определяет  цвета  заднего и переднего фона,
атрибутов            а также маски  и  типы линий для графических
                     процедур.

Отображение          Рисует и заполняет фигуры на экране.
образов

Передача             Запоминает образы в памяти и восстанавливает
образов              их.

Отображение          Отображает    текст   с   заданным  шрифтом,
шрифтов              совместимым с Microsoft Windows 286/386.

     Все  эти  задачи  подробно  описаны  в  следующих  разделах.
Обратите   внимание,   что   имена  многих  графических  процедур
превышают  6  символов,  что  позволяет  избежать   использования
метакоманды  $TRUNCATE  в  программах,  использующих  графические
процедуры.


                               255



     8.2  ОПРЕДЕЛЕНИЕ ГРАФИЧЕСКИХ ХАРАКТЕРИСТИК

     До создания графики на экране вам  необходимо  обратиться  к
процедурам,   которые  определяют  способ  отображения  текста  и
графики.  В разделах 8.2.1  -  8.2.4  обсуждаются  четыре  группы
таких процедур.


     8.2.1  ВЫБОР ОПЦИЙ ОТОБРАЖЕНИЯ

     Графическая   библиотека   времени   выполнения   MSФортрана
содержит   множество   процедур,   которые  позволяют  установить
необходимый способ отображения текста и графики.   Эти  процедуры
определяют   характеристики   графической   среды,  устанавливают
рабочие режимы (текстовый или графический) и управляют курсором.

Процедура           Испольование
---------           ------------

displaycursor       Включает или выключает курсор после
                    выполнения графической процедуры.

getvideoconfig      Получает информацию о текущей графической
                    среде.

setactivepage       Устанавливает расположение в памяти рабочей
                    страницы (используется для оживления объектов).

settextrows         Устанавливает число строк на экране при
                    стандартном выводе текста.

setvideomode        Устанавливает режим отображения для экрана.

setvideomoderows    Устанавливает режим отображения и число строк
                    при стандартном выводе текста.

setvisualpage       Устанавливает страницу для отображения на
                    экране.

     Процедура  displaycursor   определяет,   будет   ли   курсор
появляться  на  экране  после  выполнения  графической процедуры.
Выбранный режим будет действовать до следующего обращения к  этой
процедуре.

     Процедура getvideoconfig  возвращает  информацию  о  текущей
аппаратной среде.  Эта информация используется некоторыми другими
процедурами.

     Процедуры setactivepage и setvisualpage определяют рабочую и
отображаемую  страницы,  соответственно,  в конфигурации, которая


                               256



поддерживает несколько видеостраниц.

     Процедура setvideomode определяет для монитора рабочий режим
(например,  разрешение).   Процедура settextrows определяет число
строк текста на экране.   Процедура  setvideomoderows  объединяет
две  предыдущих  функции:   она устанавливает режим отображения и
число строк текста на экране.


     8.2.2  УСТАНОВКА ГРАФИЧЕСКИХ КООРДИНАТ

     Процедуры  установки  координат  управляют   местоположением
графики  на  экране.  Графические процедуры MSФортрана распознают
три множества координат:

     1.  Фиксированные    "физические    координаты",     которые
         определяются   аппаратно   и   используются  процедурами
         конфигурации.

     2.  "Координаты области просмотра", которые  определяются  в
         прикладной программе.

     3.  "Координаты окна", которые  определяются  для  упрощения
         масштабирования данных с плавающей точкой.

              В координатах области просмотра (0,0) всегда
              относится к левому верхнему углу.

     Координатная  система  области  просмотра,  если  вы  ее  не
изменили,  идентична  системе  физических  координат.  Физическое
начало (0,0) всегда расположено в верхнем левом углу экрана.  Ось
x простирается в положительном направлении слева направо, а ось y
- сверху вниз.

     Процедуры позволяют  также  выполнять  преобразование  между
этими  тремя  системами координат.  (Более подробная информация о
координатной графике находится в главе 9).

Процедура              Использование
---------              -------------
getcurrentposition     Определяет текущую позицию в координатах
                       области просмотра.

getcurrentposition_w   Определяет текущую позицию в координатах
                       окна.

getphyscoord           Преобразует координаты области просмотра
                       в физические координаты.

getviewcoord           Преобразует физические координаты в


                               257



                       координаты области просмотра.

getviewcoord_w         Преобразует координаты окна в координаты
                       области просмотра в структуре xycoord.

getwindowcoord         Преобразует координаты области просмотра
                       в координаты окна.

setcliprgn             Ограничивает вывод графики частью экрана.

setvieworg             Позиционирует начало координат области
                       просмотра.

setviewport            Ограничивает вывод графики и позиционирует
                       начало координат области просмотра в
                       ограниченной области.

setwindow              Определяет координатную систему окна.

     Размерности осей x и y  зависят  от  используемой  процедуры
конфигурации  и текущего режима (текст или графика).  Их значения
определяются  значениями   numxpixels   и   numypixels,   которые
возвращаются     процедурой    getvideoconfig.     Кроме    того,
getvideoconfig через значение  bitsperpixel  возвращает  диапазон
цветов, доступных в текущем режиме.

     Начало системы координат области просмотра можно переместить
в   новую  позицию  относительно  физического  начала  с  помощью
процедуры setvieworg.   И,  тем  не  менее,  с  помощью  процедур
getcurrentposition  и  getcurrentposition_w  вы можете определить
положение любой точки.

               Координаты окна позволяют масштабировать
               данные для экрана.

     Координатная система  окна  позволяет  легко  масштабировать
любые   данные   для  расположения  на  экране.   Любой  диапазон
координат (например, от 0 до 5000) определяется как диапазон  для
координатных  осей  окна.  Отображая координатную систему окна на
заданную область экрана  (в  координаты  области  просмотра),  вы
можете   масштабировать  схему  или  рисунок  к  любому  размеру.
Процедура   setwindow   определяет   систему   координат    окна,
ограниченную заданными значениями.

     Процедура getphyscoord преобразует любые координаты  области
просмотра  в  физические  координаты,  а  процедура  getviewcoord
транслирует физические координаты в координаты области просмотра.
Аналогично,   getviewcoord_w   преобразует   координаты   окна  в
координаты  области  просмотра,  а   getwindowcoord   транслирует
координаты области просмотра в координаты окна.


                               258



     Процедура  setcliprgn   определяет   активную   ограниченную
область  на  экране  ("область  отсечения").  Функция setviewport
выполняет то же самое и, кроме того, устанавливает начало области
просмотра (viewport) в верхний левый угол области отсечения.


     8.2.3  УСТАНОВКА ПАЛИТРЫ

     Любой цвет на экране  определяется  единственным  значением,
которое  называется  "индексом  цвета".   Для того, чтобы связать
индекс  цвета  с  цветом  на   экране,   графическая   библиотека
использует  понятие  "палитры".  Палитра это просто "отображение"
(связь) индексов цвета на действительные цвета дисплея.

     Палитровые  процедуры  определяют  цвета   для   функций   и
подпрограмм,  которые  рисуют  в цвете.  Они могут также изменять
цвета элементов, уже нарисованных на экране.

     Отображение между  индексами  цветов  и  цветами  на  экране
определяется тремя палитровыми процедурами:

Процедура         Использование
---------         -------------
remapallpalette   Определяет индекс цвета для всех
                  отображаемых цветов.

remappalette      Определяет индекс цвета для указанного
                  цвета.

selectpalette     Выбирает ранее определенную палитру.

     Значения  цветов  часто   определяются   как   аргументы   к
процедурам.

     В зависимости от графического режима, каждый  пиксел  экрана
представляется   одно-,   двух-,   четырех-   или  восьми-битовым
значением.    Это   битовое   представление   цвета,   называемое
"значением  цвета", часто задается в процедурах в качестве одного
из аргументов.

     Большинство видеорежимов поддерживают только  одну  палитру.
Несколько  палитр  можно  использовать,  если выбрать графический
режим  со  средним  разрешением  $MRES4COLOR,  $MRESNOCOLOR   или
$ORESCOLOR.   (В  этих  режимах  палитра состоит из цвета заднего
фона и трех других цветов).  Выбор отдельной палитры из имеющихся
осуществляет процедура selectpalette.

     Адаптеры EGA и VGA также позволяют  переопределять  палитру,
допуская  отображение  любого  доступного  индекса цвета на любое
значение цвета.  Для EGA и VGA эту возможность  обеспечивают  две


                               259



процедуры:   функция  remappalette  переопределяет  одно значение
цвета, а remapallpalette - всю палитру.

     Процедуры  remappalette,   remapallpalette,   setbkcolor   и
getbkcolor   это   единственные   процедуры,  которые  распознают
значения цветов, определенные для EGA и VGA.

     Многие графические процедуры работают  только  с  некоторыми
аппаратными средствами или в некоторых графических режимах.  Если
эти процедуры использовать в недействительной  аппаратной  среде,
то  они  вернут  код ошибки.  В главе 11 описано, какие процедуры
возвращают  информацию  об  ошибках:   если  вы  используете  эти
процедуры,  то  выполняйте  проверку  возвращенного  значения  на
возможные ошибки.


     8.2.4  УСТАНОВКА АТРИБУТОВ ИЗОБРАЖЕНИЯ

     Процедуры вывода, которые  рисуют  дуги,  эллипсы  и  другие
примитивные  фигуры,  не  определяют  информацию о цвете или типе
линий.    Они   используют   несколько    "атрибутов",    которые
устанавливаются независимо нижеперечисленными процедурами.

Процедура      Использование
---------      -------------
getbkcolor     Возвращает текущий цвет заднего фона.

getcolor       Возвращает текущий цвет.

getlinestyle   Возвращает текущий тип линий.

getfillmask    Возвращает текущую маску заполнения.

setbkcolor     Устанавливает новый текущий цвет заднего фона.

setcolor       Устанавливает новый текущий цвет.

setfillmask    Устанавливает новый текущий цвет маски заполнения.

setlinestyle   Устанавливает новый текущий тип линий.

     Процедуры getcolor и  setcolor  получают  или  устанавливают
атрибут "текущий цвет", который используется процедурой floodfill
и  всеми  процедурами  рисования  замкнутых  фигур.   Аналогично,
процедуры   getbkcolor  и  setbkcolor  получают  и  устанавливают
"текущий цвет заднего фона", используемуый функцией clearscreen.

     Процедуры   getfillmask   и   setfillmask   возвращают   или
устанавливают  атрибут  "текущая  маска  заполнения".   Маска это
8x8-битовый массив, в котором  каждый  бит  представляет  пиксел.


                               260



Если  бит равен 0, то пиксел в памяти остается нетронутым:  маска
прозрачна для этого  пиксела.   Если  бит  равен  1,  то  пикселу
назначается   текущее   значение  цвета.   Массив  действует  как
трафарет, который повторяется по  всей  области  заполнения.   Он
"маскирует"   задний  фон  пиксельным  шаблоном,  нарисованным  в
текущем цвете, позволяя тем самым  создавать  большое  количество
рисунков заполнения.  Эти процедуры особенно полезны для создания
эффектов затенения и слабых изменений цвета.

     Процедуры   getlinestyle   и   setlinestyle   возвращают   и
устанавливают   "текущий  тип  линий".   Тип  линий  определяется
16-битовым шаблоном, в котором каждый бит соответствует  пикселу.
Если  бит  равен 0, то пиксел сохраняет текущий цвет заднего фона
(т.е.  прозрачен).  Если бит равен  1,  то  пиксел  появляется  в
текущем  цвете.   Шаблон  повторяется  по  всей длине линии.  Две
процедуры позволяют вам создавать большое разнообразие линий.


     8.3  ОТОБРАЖЕНИЕ ГРАФИЧЕСКОГО ВЫВОДА

     Остальные графические процедуры  дают  возможность  рисовать
геометрические  фигуры,  выводить текст, символы разных шрифтов и
перемещать образы между памятью и экраном.  Эти процедуры описаны
в разделах 8.3.1-8.3.3.


     8.3.1  СОЗДАНИЕ ГРАФИЧЕСКОГО ИЗОБРАЖЕНИЯ

     Процедуры   графической   библиотеки    MSФортрана    рисуют
геометрические   фигуры,  используя  заданную  вами  координатную
систему.  Они используют текущие  тип  линий,  маску  заполнения,
цвета заднего и переднего фона.

     Если вам необходимо изменить действующий  по  умолчанию  тип
линий  (сплошной), маску (без маски), цвет заднего фона (зеленый)
или переднего фона (наибольший  индекс  в  текущей  палитре),  то
перед вызовом процедуры рисования следует вызвать соответствующую
процедуру  изменения   атрибута.    Нижеперечисленные   процедуры
рисования   используют  одни  и  те  же  атрибуты,  пока  они  не
изменятся.

     Имя процедуры описывает ее задачу или рисуемую фигуру.

Процедура              Использование
---------              -------------

arc,arc_w              Рисуют дуги.

clearscreen            Очищает экран (заполняет его текущим
                       цветом заднего фона).


                               261



ellipse,ellipse_w      Рисуют эллипс или окружность.

floodfill,             Заполняют область экрана текущей маской
floodfill_w            с текущим цветом.

getcurrentposition,    Находит координаты текущей позиции
getcurrentposition_w   графического вывода.

getpixel,getpixel_w    Возвращают значение пиксела.

lineto,lineto_w        Рисуют линию из текущей позиции
                       графического вывода в заданную точку.

moveto,moveto_w        Перемещают текущую позицию графического
                       вывода в заданную точку.

pie,pie_w              Русуют фигуры смешанной формы.

rectangle,             Рисуют прямоугольники.
rectangle_w

setpixel,setpixel_w    Устанавливают значение пиксела.

     Большая часть этих процедур  имеет  две  формы.   Процедуры,
имена    которых    оканчиваются   символами   "_w",   используют
координатную систему окна и значения аргументов DOUBLE_PRECISION.
Процедуры без этого суффикса используют систему координат области
просмотра.

     Кривые фигуры, такие как  дуги  и  эллипсы,  центрируются  в
"ограничивающем  прямоугольнике",  который  определяется  верхним
левым и нижним правым углами.   Центр  прямоугольника  становится
центром   фигуры,  а  границы  прямоугольника  определяют  размер
фигуры.  На  рис.8.1  ограничивающий  прямоугольник  определяется
точками (x1,y1) и (x2,y2).

          (x1,y1)
             +---------------------------------+
             |         .             .         |
             |    .                       .    |
             | .                             . |
             |:                               :|
             | .                             . |
             |    .                       .    |
             |         .             .         |
             +---------------------------------+

   Рисунок 8.1  Ограничивающий прямоугольник




                               262



     8.3.2 ВЫВОД ТЕКСТА

     Нижеперечисленные  процедуры  позволяют  выводить  текст  на
экран  как  в  графическом, так и в текстовом режиме.  В главе 10
описаны процедуры для вывода текста заданного шрифта.  В  отличие
от  стандартных операторов ввода-вывода, эти процедуры распознают
границы текстовых окон, используемых в прикладных программах.

Процедура         Использование
---------         -------------

displaycursor     Включает или выключает курсор после выхода
                  из графической процедуры.

gettextcolor      Возвращает текущий цвет текста.

gettextcursor     Возвращает текущий атрибут курсора (только
                  для текстовых режимов).

gettextposition   Возвращает текущую позицию вывода текста.

outtext           Посылает текст на экран в текущую позицию.

settextcolor      Устанавливает новый текущий цвет текста.

settextcursor     Устанавливает текущий атрибут курсора
                  (только для текстовых режимов).

settextposition   Перемещает текущую позицию текста.

settextwindow     Устанавливает текущее окно вывода текста.

wrapon            Включает или выключает перенос строки.

     Эти процедуры не имеют возможностей  форматирования  текста.
Если необходимо напечатать целые или плавающие значения, то перед
вызовом этих процедур значения следует преобразовать в  строки  с
помощью  оператора внутренней записи WRITE.  Все позиции текста в
этих процедурах  определяются  в  координатах  строк  и  столбцов
символов.

     Процедура  settextwindow  является  текстовым   эквивалентом
графической  процедуры  setcliprgn,  за исключением того, что она
ограничивает область вывода для  текста,  печатаемого  с  помощью
outtext.   Она  не  влияет на стандартные операторы ввода-вывода,
такие как WRITE.  Процедура  outtext  выводит  строку  на  экран.
Текущий  цвет  текста  можно  определить  или  изменить с помощью
процедур gettextcolor и settextcolor, соответственно.   Процедуры
gettextposhtion   и   settextposition  позволяют  определить  или
изменить местоположение следующего текста, выводимого на экран.


                               263



     ПРЕДУПРЕЖДЕНИЕ:  Оператор WRITE  выводит  на  экран  символы
возврата  каретки  (CR)  и  перевода строки (LF) в начале первого
оператора ввода-вывода,  следующего  за  оператором  WRITE.   Это
может   вызвать  непредсказуемое  позиционирование  текста,  если
графические процедуры settextposition  и  settext  смешиваются  с
оператором   WRITE.    От   этого   можно   избавиться,   если  в
соответствующем операторе FORMAT использовать дескриптор  формата
\ (обратный слэш), подавляющий CR-LF.

     Функция  wrapon  включает  или   выключает   "автоматический
переход  на  новую  строку".  Переход на новую строку заканчивает
строку текста и начинает новую, если слово в конце строки слишком
длинное.  Без перехода на новую строку это же слово расщепляется,
часто бессмысленно, и остаток помещается на следующую линию.


     8.3.3  ПЕРЕНОС ИЗОБРАЖЕНИЙ

     Группы процедур getimage и putimage  перемещают  изображения
между  памятью  и  экраном.   Для  хранения  изображения в памяти
программа размещает  в  памяти  буфер  (т.е.   захватывает  часть
памяти  компьютера).   Процедура  imagesize  вычисляет  размер  в
байтах буфера, необходимого для хранения данного образа.

     Процедуры,   оканчивающиеся   символами   "_w",   используют
координаты окна; другие функции этой группы используют координаты
области просмотра.

Процедура      Использование
---------      -------------
getimage,      Запоминают изображение на экране в памяти.
getimage_w

imagesize,     Возвращают размер изображения в байтах.
imagesize_w

putimage,      Извлекают изображение из памяти и выводят на экран.
putimage_w

     Используя  процесс  перемещения   изображений,   вы   можете
оживлять объекты.

     В системах,  которые  поддерживают  много  страниц,  графику
можно  посылать  на  страницу  в памяти, в то время как на экране
отображается  другая  страница.   После  завершения  формирования
страницы  в  памяти, ее можно вывести на экран и начать рисование
новой страницы  в  памяти.   Повторяя  этот  процесс,  вы  можете
оживлять объекты на экране.




                               264



     8.3.4  ВЫВОД СИМВОЛОВ ИЗ РАЗНЫХ ШРИФТОВ

     Графическая   библиотека   MSФортрана   содержит   несколько
различных   шрифтов,   поэтому  при  выводе  символов  необходимо
указывать, к какому шрифту они принадлежат.  После выбора  шрифта
вы   можете   делать   запросы   о   ширине  строки  или  текущих
характеристиках  шрифта.   Вывод   символов   различных   шрифтов
контролируется следующими функциями.

Процедура         Использование
---------         -------------
getfontinfo       Возвращает текущие характеристики шрифта.

getgtextextent    Определяет ширину заданного текста в текущем
                  шрифте.

outgtext          Передает на экран в заданную позицию текст
                  в текущем шрифте.

registerfonts     Инициирует библиотеку шрифтов.

setfont           Находит шрифт, который соответствует заданным
                  характеристикам, и делает его текущим для
                  использования функцией outgtext.

unregisterfonts   Освобождает память, захваченную registerfonts.

     Символы   могут   быть   нарисованы   ("отображены")   двумя
способами:   матрицей  точек  или  векторами (серией линий и дуг,
которые образуют букву).  В главе 10  "Использование  шрифтов  из
графической  библиотеки"  имеется  подробное  описание  и примеры
использования шрифтов MSФортрана.


     8.4  ПРОЦЕДУРЫ, ДОСТУПНЫЕ В OS/2

     Графическая библиотека OS/2 GRTEXTP.LIB  содержит  текстовые
процедуры  для  работы  под  управлением DOS.  Функционирование и
использование процедур  OS/2  такие  же,  как  в  DOS,  и  к  ним
полностью   применимо   описание   в   главе   11.    Только  при
редактировании   связей   вместо   GRAPHICS.LIB   надо    ставить
GRTEXTP.LIB.   Обратите  внимание,  что  и  DOS и OS/2 используют
одинаковые графические include-файлы.

     Библиотека GRTEXTP.LIB поддерживает следующие процедуры:

clearscreen           getvisualpage         settextwindow
displaycursor         outtext               setvideomode
getactivepage         setactivepage         setvideomoderows
getbkcolor            setbkcolor            setvisualpage


                               265



gettextcolor          settextcolor          wrapon
gettextcursor         settextcursor
gettextposition       settextposition
getvideoconfig        settextrows
















































                               266

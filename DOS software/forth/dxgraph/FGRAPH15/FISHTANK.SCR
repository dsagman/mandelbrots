                                                                FISHTANK -- This program demonstrates multi-object non-         destructive animation.  The coral background is displayed       on page 2 and copied to page 0, the visual page.  A packed      pixel run file containing the 6 fish is displayed on page 1,    and then GETIMAGE is used to load the fish into the fish        bitmaps.                                                                                                                        To make the fish move, the background is copied to page 1       and the fish are put over the background using CLPIMAGE         and FLPIMAGE.  The fish are clipped at the edge of the          screen.  Page 1 is then copied to page 0 using COPYPAGE.        This process is repeated in a loop.                                                                                             Adapted to Forth from the Fastgraph demo.                                                                                       \ Load screen                                                   empty forth definitions  decimal                                application                                                                                                                     1 fload FGRAPH  \ load Fastgraph interface                                                                                      cr .( Compiling: FISHTANK )  2 #screens 1- thru                                                                                 cr .( Save to disk? ) y/n                                       [if]  turnkey main  FISHTANK  [then]                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            \ Define a cell array                                           : ARRAY  create  does> swap cells + ;                                                                                           \ Convert to null-terminated string                             : ASCIIZ ( c-addr u -- asciiz )                                   >fnamevariable SEED                                                                                                                   \ random number generator                                       : IRANDOM ( min max -- n )                                        over - 1+  >r                                                   seed @  dup 7 rshift  xor                                               dup 8 lshift  xor                                       $7FFF and  dup seed !                                           r> mod  + ;                                                                                                                   \ get a seed for the random number generator                    : RANDOM_INIT  ( -- )                                             getclock drop  $7FFF and  seed ! ;                                                                                                                                                                                                                            variable OLD_MODE                                                                                                               create PCOLORS                                                     0 , 1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,                          16 , 0 , 18 , 19 , 20 , 21 , 22 , 23 ,                                                                                        \ fish bitmaps                                                  create FISH1  700  allot    create FISH4  840  allot            create FISH2  1026 allot    create FISH5  682  allot            create FISH3  884  allot    create FISH6  1224 allot                                                                            \ for convenience, an array of pointers to fishes               array FISHES                                                      fish1 , fish2 , fish3 , fish4 , fish5 , fish6 ,                                                                                                                                               \ location of fish x & y                                        array FISH_X1                                                     0 , 64 , 128 , 200 , 0 , 80 ,                                                                                                 array FISH_Y1                                                     199 , 199 , 199 , 199 , 150 , 150 ,                                                                                           \ size of fish: width                                           array WIDTH                                                       28 , 27 , 34 , 28 , 31 , 34 ,                                                                                                 \ size of fish: height                                          array HEIGHT                                                      25 , 38 , 26 , 30 , 22 , 36 ,                                                                                                                                                                 11 constant NFISH                                                                                                               \ There are 11 fish total, and 6 different kinds of fish.       \ These arrays keep track of what kind of fish each fish is,    \ and how each fish moves:                                                                                                      \ which fish bitmap applies to this fish?                       array FISH                                                        1 , 1 , 2 , 3 , 3 , 0 , 0 , 5 , 4 , 2 , 3 ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                   \ starting x coordinate                                         array X                                                           -100 , -150 , -450 , -140 , -200 , 520 , 620 , -800 ,            800 ,  800 , -300 ,                                                                                                          \ starting y coordinate                                         array Y                                                           40 ,  60 , 150 , 80 , 70 , 190 , 180 , 100 ,                    30 , 130 ,  92 ,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                              \ how far left (off screen) the fish can go                     array XMIN                                                        -300 , -300 , -800 , -200 , -200 , -200 , -300 , -900 ,         -900 , -900 , -400 ,                                                                                                          \  how far right (off screen) the fish can go                   array XMAX                                                         600 ,  600 , 1100 , 1000 , 1000 , 750 , 800 , 1200 ,           1400 , 1200 ,  900 ,                                                                                                          \ how fast the fish goes left and right                         array XINC                                                         2 ,  2 , 8 , 5 , 5 , -3 , -3 , 7 ,                             -8 , -9 , 6 ,                                                                                                                                                                                 \ how far up this fish can go                                   array YMIN                                                        40 , 60 , 120 , 70 , 60 , 160 , 160 , 80 ,                      30 , 110 , 72 ,                                                                                                               \ how far down this fish can go                                 array YMAX                                                        80 , 100 , 170 , 110 , 100 , 199 , 199 , 120 ,                  70 , 150 , 122 ,                                                                                                              \ how fast the fish moves up or down                            array YINC                                                        0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,                                                                                                                                                                                                                   \ how long fish can go in the vertical direction                \ before stopping or turning around                             array YTURN                                                       50 , 30 , 10 , 30 , 20 , 10 , 10 , 10 ,                         30 , 20 , 10 ,                                                                                                                \ counter to compare to yturn                                   array YCOUNT                                                      0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ,                                                                                   \ starting direction for each fish                              array DIR                                                         0 , 0 , 0 , 0 , 0 , 1 , 1 , 0 , 1 , 1 , 0 ,                                                                                                                                                                                                                   \ fill up the fish bitmap arrays                                : GET_FISH  ( -- )                                                \ get the fish from a file and put them on page 1               1 setpage                                                       0 199 fgmove                                                    s" fish.ppr" asciiz  320 1 dispfile                             \ build the fish bitmaps                                        6 0 do                                                            i fish_x1 @  i fish_y1 @  fgmove                                i fishes @  i width @  i height @  getimage                   loop ;                                                                                                                                                                                                                                                                                                                                                                                        \ draw one of the six fish anywhere you want                    : PUT_FISH  ( fish_num x y fish_dir -- )                          >r                                                              \ move to position where the fish will appear                   fgmove                                                          \ draw a left- or right-facing fish, depending on fish_dir      dup >r  fishes @  r@ width @  r> height @                       r> if                                                             clpimage                                                      else                                                              flpimage                                                      then ;                                                                                                                                                                                                                                                                                                                        \ make the fish swim around                                     : GO_FISH  ( -- )                                                 begin                                                             \ copy the background from page 2 to page 1                     2 1 copypage                                                    \ put all the fish on the background                            nfish 0 do                                                        1 setpage                                                       1 i ycount +!                                                   i ycount @  i yturn @  > if                                       0 i ycount !                                                    -1 1 irandom  i yinc !                                        then                                                                                                                                                                                                                                                            i yinc @  i y +!                                                i y @  i ymin @  max   i ymax @  min   i y !                    i x @  0 320 within  if                                           i fish @  i x @  i y @  i dir @  put_fish                     else                                                              i x @  -71 0 within  if                                           0 71  0 199  104 199  1 3 transfer                              3 setpage                                                       i fish @  i x @  104 +  i y @  i dir @  put_fish                104 175  0 199  0 199  3 1 transfer                           then                                                          then                                                                                                                                                                                                                                                                                                                            i xinc @  i x +!                                                i x @  i xmin @  > not                                          i x @  i xmax @  < not  or if                                     i xinc @  negate  i xinc !                                      1  i dir @  -  i dir !                                        then                                                          loop                                                            \ copy page 1 to page 0                                         0 setpage                                                       1 0 copypage                                                    \ intercept a keystroke, if escape exit the program             intkey drop  27 =                                             until ;                                                                                                                                                                                                                                                       \                                                               : MAIN  ( -- )                                                    fgtest abort" FASTGRAPH driver not installed/wrong version"     ( initpm )                                                      \ make sure the system supports video mode 13 with 4 pages      13 4 testmode 0= if                                               cr                                                              ." This program requires an EGA or VGA card" cr                 ." with at least 128k.  If an EGA card is" cr                   ." present, it must be the active adapter." cr                  abort                                                         then                                                                                                                                                                                                                                                                                                                            \ initialize the video environment                              getmode old_mode !                                              13 setmode                                                      pcolors palettes                                                random_init                                                     \ get the coral background from file and put it on page 2       2 setpage  0 199 fgmove                                         s" coral.ppr" asciiz  320 1 dispfile                            \ copy background from page 2 to page 0, the visual page        2 0 copypage                                                    get_fish              \ get the fish                            go_fish               \ make the fish go                        old_mode @ setmode    \ restore the original video state        reset ;                                                                                                                       